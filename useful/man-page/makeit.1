.TH MAKEIT 1 2024-05-30
.SH NAME
makeit \- utility for creating and loading templates
.SH SYNOPSIS
.B makeit
.I template
[\fB\-d\fR \fIDIRECTORY\fR]
[variables] ...

.B makeit
\fB\-c\fR
.I template
[\fB\-d\fR \fIDIRECTORY\fR]

.B makemake
[\fB\-h\fR]

.SH DESCRIPTION
.B makeit
is a command-line utility for creating and loading templates.

Templates also support usage of basic expressions. Expressions in templates are
enclosed in \fB{{\fR and \fB}}\fR.

.SS VARIABLES
Variable name starts with alphabetic character or underscore and is followed
by any alphanumeric character or underscore.

Variables can be supplied using command-line arguments or by predefining them
for each template (in \fBmakeit.json\fR). Varibles in template expressions are
then expanded based on set variables.

There are also internal variables:

.TP
.B _PNAME
Project name based on project directory

.TP
.B _PDIR
Project directory containing full path

.TP
.B _OS
Operating system

.SS LITERALS
Literals are enclosed in double quotes (\fB"\fR). They support escape sequences
as well, starting with backslash (\fB\\\fR).

.TP
\fB\\n\fR
newline

.TP
\fB\\r\fR
carriage return

.TP
\fB\\t\fR
tabulator

.TP
\fB\\\\\fR
backslash (\fB\\\fR)

.TP
\fB\\"\fR
double quotes (\fB"\fR)

.RE
Other sequences are expanded to the character following backslash. This can be
used for escaping expressions, which are enclosed in \fB{{ }}\fR. These
expression won't be executed.

.SS OPERATOR ==
The equality operator \fB==\fR is used to compare two values for equality. It
evaluates to \fBtrue\fR if the values on either side of the operator are equal,
and \fBfalse\fR otherwise.

The syntax is:

.in +4
.RS
EXPR1 == EXPR2
.RE

where \fIEXPR1\fR and \fIEXPR2\fR are the values or expressions to be compared.

.SS OPERATOR ?:
The ternary conditional operator \fB?:\fR is a shorthand for an if-else
statement. It evaluates a condition and returns one of two values depending on
whether the condition is true or false.

The syntax is:

.in +4
.RS
EXPR1 ? EXPR2 : EXPR3
.RE

where \fIEXPR1\fR is condition to evaluate, \fIEXPR2\fR is the value returned
if the condition is true, and \fIEXPR3\fR is the value returned if the
condition is false.

.SS OPERATOR ??
The null coalescing operator \fB??\fR is used to provide a default value when
an expression evaluates to null. It returns value of the first operand
if it is not null. Otherwise, it returns the value of the second operand.

The syntax is:

.in +4
.RS
EXPR1 ?? EXPR2
.RE

where \fIEXPR1\fR is the expression to evaluate, and \fIEXPR2\fR is the default
value to return if \fIEXPR1\fR is null.

.RE
.SH OPTIONS

Duplication of an option, that requires an argument, or template name will
override previous argument value or template name.

.TP
\fB\-c \-\-create\fR \fItemplate_name\fR
creates new template with given name

\fB\-r \-\-remove\fR \fItemplate_name\fR
removes template with given name

.TP
\fB\-d \-\-dir\fR \fIdirectory\fR
sets directory to load/create template to/from (default is current directory)

.TP
\fB\-D\fIvariable_name\fR=\fIvalue\fR
defines variable with given value

.TP
\fB\-l \-\-list\fR
lists all templates

.TP
\fB\-h  \-\-help\fR
prints help

.RE
.SH AUTHOR
Martin Slez√°k (Martan03)
